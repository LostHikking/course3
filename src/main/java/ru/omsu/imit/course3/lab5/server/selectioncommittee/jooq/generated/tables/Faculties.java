/*
 * This file is generated by jOOQ.
 */
package ru.omsu.imit.course3.lab5.server.selectioncommittee.jooq.generated.tables;


import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import ru.omsu.imit.course3.lab5.server.selectioncommittee.jooq.generated.Indexes;
import ru.omsu.imit.course3.lab5.server.selectioncommittee.jooq.generated.Keys;
import ru.omsu.imit.course3.lab5.server.selectioncommittee.jooq.generated.Selectioncommittee;
import ru.omsu.imit.course3.lab5.server.selectioncommittee.jooq.generated.tables.records.FacultiesRecord;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.11"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Faculties extends TableImpl<FacultiesRecord> {

    private static final long serialVersionUID = 486335334;

    /**
     * The reference instance of <code>selectioncommittee.faculties</code>
     */
    public static final Faculties FACULTIES = new Faculties();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<FacultiesRecord> getRecordType() {
        return FacultiesRecord.class;
    }

    /**
     * The column <code>selectioncommittee.faculties.id</code>.
     */
    public final TableField<FacultiesRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>selectioncommittee.faculties.name</code>.
     */
    public final TableField<FacultiesRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * Create a <code>selectioncommittee.faculties</code> table reference
     */
    public Faculties() {
        this(DSL.name("faculties"), null);
    }

    /**
     * Create an aliased <code>selectioncommittee.faculties</code> table reference
     */
    public Faculties(String alias) {
        this(DSL.name(alias), FACULTIES);
    }

    /**
     * Create an aliased <code>selectioncommittee.faculties</code> table reference
     */
    public Faculties(Name alias) {
        this(alias, FACULTIES);
    }

    private Faculties(Name alias, Table<FacultiesRecord> aliased) {
        this(alias, aliased, null);
    }

    private Faculties(Name alias, Table<FacultiesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Faculties(Table<O> child, ForeignKey<O, FacultiesRecord> key) {
        super(child, key, FACULTIES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Selectioncommittee.SELECTIONCOMMITTEE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.FACULTIES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<FacultiesRecord, Integer> getIdentity() {
        return Keys.IDENTITY_FACULTIES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<FacultiesRecord> getPrimaryKey() {
        return Keys.KEY_FACULTIES_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<FacultiesRecord>> getKeys() {
        return Arrays.<UniqueKey<FacultiesRecord>>asList(Keys.KEY_FACULTIES_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Faculties as(String alias) {
        return new Faculties(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Faculties as(Name alias) {
        return new Faculties(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Faculties rename(String name) {
        return new Faculties(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Faculties rename(Name name) {
        return new Faculties(name, null);
    }
}
